package org.aptech.backendmypham.services.serviceImpl;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.aptech.backendmypham.dto.EmailConfirmationRequestDto;
import org.aptech.backendmypham.services.EmailService;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

import java.io.UnsupportedEncodingException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;


@Service
@RequiredArgsConstructor
@Slf4j
public class EmailServiceImpl implements EmailService {

    private final JavaMailSender mailSender;

    @Value("${spring.mail.username}")
    private String fromEmail;

    @Value("${app.company.name:Beauty Spa}")
    private String companyName;

    @Value("${app.company.address:123 Beauty Street, Spa City}")
    private String companyAddress;

    @Value("${app.company.phone:+84 123 456 789}")
    private String companyPhone;

    @Override
    public boolean sendAppointmentConfirmation(EmailConfirmationRequestDto request) {
        try {
            String emailContent = createEmailHtml(request);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setFrom(fromEmail, companyName);
            helper.setTo(request.getCustomerEmail());
            helper.setSubject("X√°c Nh·∫≠n L·ªãch H·∫πn - " + companyName + " #" + request.getAppointmentId());
            helper.setText(emailContent, true);

            mailSender.send(message);

            log.info("Appointment confirmation email sent successfully to: {}", request.getCustomerEmail());

        } catch (MessagingException | UnsupportedEncodingException e) {
            log.error("Failed to send appointment confirmation email to: {}", request.getCustomerEmail(), e);
            throw new RuntimeException("Error occurred while sending email: " + e.getMessage());
        }
        return false;
    }

    private String createEmailHtml(EmailConfirmationRequestDto request) {
        String notesSection = "";
        if (request.getNotes() != null && !request.getNotes().trim().isEmpty()) {
            notesSection = String.format(
                    "<div style='background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0;'>" +
                            "<strong style='color: #856404;'>üìù Special Notes:</strong><br>" +
                            "<span style='color: #856404; font-style: italic;'>%s</span>" +
                            "</div>", request.getNotes());
        }

        // S·ª¨A L·ªñI T·∫†I ƒê√ÇY: S·∫Øp x·∫øp l·∫°i danh s√°ch tham s·ªë ƒë·ªÉ kh·ªõp v·ªõi c√°c placeholder trong HTML
        return String.format("""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>X√°c nh·∫≠n l·ªãch h·∫πn</title>
        </head>
        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; background-color: #f4f4f4;">
            <div style="background-color: #ffffff; margin: 20px auto; padding: 0; border-radius: 10px; box-shadow: 0 0 20px rgba(0,0,0,0.1); overflow: hidden;">
                
                <div style="background: linear-gradient(135deg, #667eea 0%%, #764ba2 100%%); color: white; padding: 30px 40px; text-align: center;">
                    <h1 style="margin: 0; font-size: 28px; font-weight: 300;">%s</h1>
                    <p style="margin: 10px 0 0 0; font-size: 16px;">X√°c nh·∫≠n l·ªãch h·∫πn</p>
                </div>

                <div style="padding: 40px;">
                    <div style="font-size: 18px; margin-bottom: 30px; color: #2c3e50;">
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t l·ªãch h·∫πn v·ªõi ch√∫ng t√¥i! Ch√∫ng t√¥i r·∫•t mong ƒë∆∞·ª£c ph·ª•c v·ª• b·∫°n v√† gi√∫p b·∫°n c·∫£m th·∫•y th·∫≠t tuy·ªát v·ªùi.</p>
                    </div>

                    <div style="background-color: #f8f9fa; border-left: 4px solid #667eea; padding: 25px; margin: 30px 0; border-radius: 5px;">
                        <h2 style="margin-top: 0; color: #667eea;">üìÖ Th√¥ng tin l·ªãch h·∫πn</h2>
                        
                        <table style="width: 100%%; border-collapse: collapse;">
                            <tr style="border-bottom: 1px solid #e9ecef;">
                                <td style="padding: 8px 0; font-weight: 600; color: #495057; width: 40%%;">M√£ l·ªãch h·∫πn:</td>
                                <td style="padding: 8px 0; color: #2c3e50; text-align: right;">#%s</td>
                            </tr>
                            <tr style="border-bottom: 1px solid #e9ecef;">
                                <td style="padding: 8px 0; font-weight: 600; color: #495057;">D·ªãch v·ª•:</td>
                                <td style="padding: 8px 0; color: #2c3e50; text-align: right;">%s</td>
                            </tr>
                            <tr style="border-bottom: 1px solid #e9ecef;">
                                <td style="padding: 8px 0; font-weight: 600; color: #495057;">Ng√†y:</td>
                                <td style="padding: 8px 0; color: #2c3e50; text-align: right;">%s</td>
                            </tr>
                            <tr style="border-bottom: 1px solid #e9ecef;">
                                <td style="padding: 8px 0; font-weight: 600; color: #495057;">Th·ªùi gian:</td>
                                <td style="padding: 8px 0; color: #2c3e50; text-align: right;">%s - %s</td>
                            </tr>
                            <tr style="border-bottom: 1px solid #e9ecef;">
                                <td style="padding: 8px 0; font-weight: 600; color: #495057;">Nh√¢n vi√™n:</td>
                                <td style="padding: 8px 0; color: #2c3e50; text-align: right;">%s</td>
                            </tr>
                            <tr style="border-bottom: 1px solid #e9ecef;">
                                <td style="padding: 8px 0; font-weight: 600; color: #495057;">ƒê·ªãa ƒëi·ªÉm:</td>
                                <td style="padding: 8px 0; color: #2c3e50; text-align: right;">%s</td>
                            </tr>
                            <tr>
                                <td style="padding: 8px 0; font-weight: 600; color: #495057;">T·ªïng chi ph√≠:</td>
                                <td style="padding: 8px 0; color: #28a745; font-weight: bold; font-size: 18px; text-align: right;">$%.2f</td>
                            </tr>
                        </table>
                    </div>

                    %s

                    <div style="background-color: #d1ecf1; border: 1px solid #bee5eb; padding: 20px; border-radius: 5px; margin: 25px 0;">
                        <h3 style="color: #0c5460; margin-top: 0;">üìã Th√¥ng tin quan tr·ªçng</h3>
                        <ul style="color: #0c5460; margin: 10px 0; padding-left: 20px;">
                            <li><strong>Th·ªùi gian ƒë·∫øn:</strong> Vui l√≤ng ƒë·∫øn s·ªõm 10-15 ph√∫t ƒë·ªÉ l√†m th·ªß t·ª•c</li>
                            <li><strong>H·ªßy l·ªãch:</strong> G·ªçi ƒëi·ªán tr∆∞·ªõc 24 gi·ªù ƒë·ªÉ thay ƒë·ªïi ho·∫∑c h·ªßy l·ªãch h·∫πn</li>
                            <li><strong>Thanh to√°n:</strong> Ch·∫•p nh·∫≠n ti·ªÅn m·∫∑t, th·∫ª v√† v√≠ ƒëi·ªán t·ª≠</li>
                            <li><strong>C·∫ßn mang theo:</strong> Kh√¥ng c·∫ßn g√¨ th√™m, ch√∫ng t√¥i chu·∫©n b·ªã m·ªçi th·ª©</li>
                        </ul>
                    </div>

                    <p style="text-align: center; color: #6c757d; margin-top: 30px;">
                        N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o ho·∫∑c mu·ªën thay ƒë·ªïi l·ªãch h·∫πn, 
                        ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.
                    </p>
                </div>

                <div style="background-color: #2c3e50; color: #ecf0f1; padding: 30px 40px; text-align: center;">
                    <div style="margin: 15px 0;">
                        <h3 style="margin: 0 0 10px 0;">%s</h3>
                        <p style="margin: 5px 0; font-size: 14px;">%s</p>
                        <p style="margin: 5px 0; font-size: 14px;">üìû %s</p>
                        <p style="margin: 5px 0; font-size: 14px;">üìß %s</p>
                    </div>
                    
                    <p style="font-size: 12px; color: #95a5a6; margin-top: 20px;">
                        ¬© %d %s. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
                    </p>
                </div>
            </div>
        </body>
        </html>
        """,
                companyName,
                request.getCustomerName(),
                request.getAppointmentId(),
                request.getServiceName(),
                formatDate(request.getAppointmentDate()),
                request.getAppointmentTime(),
                request.getEndTime() != null ? request.getEndTime() : "Kh√¥ng x√°c ƒë·ªãnh",
                request.getStaffName() != null ? request.getStaffName() : "S·∫Ω ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh",
                request.getPrice(),
                notesSection,
                companyName,
                companyAddress,
                companyPhone,
                fromEmail,
                LocalDateTime.now().getYear(),
                companyName
        );
    }
    @Override
    public boolean sendAppointmentCancellation(EmailConfirmationRequestDto request) {
        try {
            String emailContent = createCancellationEmailHtml(request);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setFrom(fromEmail, companyName);
            helper.setTo(request.getCustomerEmail());
            // Thay ƒë·ªïi ti√™u ƒë·ªÅ email
            helper.setSubject("Th√¥ng B√°o H·ªßy L·ªãch H·∫πn - " + companyName + " #" + request.getAppointmentId());
            helper.setText(emailContent, true);

            mailSender.send(message);

            log.info("Cancellation email sent successfully to: {}", request.getCustomerEmail());
            return true;
        } catch (MessagingException | UnsupportedEncodingException e) {
            log.error("Failed to send cancellation email to: {}", request.getCustomerEmail(), e);
            throw new RuntimeException("Error occurred while sending cancellation email: " + e.getMessage());
        }
    }
    private String createCancellationEmailHtml(EmailConfirmationRequestDto request) {
        // M·∫´u HTML cho email h·ªßy, c√≥ th·ªÉ thay ƒë·ªïi m√†u s·∫Øc v√† n·ªôi dung cho ph√π h·ª£p
        return String.format("""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
        </head>
        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; background-color: #f4f4f4;">
            <div style="background-color: #ffffff; margin: 20px auto; padding: 0; border-radius: 10px; box-shadow: 0 0 20px rgba(0,0,0,0.1); overflow: hidden;">
                
                <div style="background: linear-gradient(135deg, #868e96 0%%, #495057 100%%); color: white; padding: 30px 40px; text-align: center;">
                    <h1 style="margin: 0; font-size: 28px; font-weight: 300;">%s</h1>
                    <p style="margin: 10px 0 0 0; font-size: 16px;">H·ªßy L·ªãch H·∫πn</p>
                </div>

                <div style="padding: 40px;">
                    <div style="font-size: 18px; margin-bottom: 30px; color: #2c3e50;">
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Ch√∫ng t√¥i x√°c nh·∫≠n r·∫±ng l·ªãch h·∫πn c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c h·ªßy th√†nh c√¥ng theo y√™u c·∫ßu. Vui l√≤ng xem th√¥ng tin chi ti·∫øt c·ªßa cu·ªôc h·∫πn ƒë√£ h·ªßy b√™n d∆∞·ªõi.</p>
                    </div>

                    <div style="background-color: #f8f9fa; border-left: 4px solid #dc3545; padding: 25px; margin: 30px 0; border-radius: 5px;">
                        <h2 style="margin-top: 0; color: #dc3545;">üìÖ Chi Ti·∫øt L·ªãch H·∫πn ƒê√£ H·ªßy</h2>
                        <table style="width: 100%%; border-collapse: collapse;">
                            <tr><td style="padding: 8px 0; font-weight: 600;">M√£ cu·ªôc h·∫πn:</td><td style="text-align: right;">#%s</td></tr>
                            <tr><td style="padding: 8px 0; font-weight: 600;">D·ªãch v·ª•:</td><td style="text-align: right;">%s</td></tr>
                            <tr><td style="padding: 8px 0; font-weight: 600;">Ng√†y ban ƒë·∫ßu:</td><td style="text-align: right;">%s</td></tr>
                            <tr><td style="padding: 8px 0; font-weight: 600;">Th·ªùi gian ban ƒë·∫ßu:</td><td style="text-align: right;">%s - %s</td></tr>
                        </table>
                    </div>

                    <p style="text-align: center; color: #6c757d; margin-top: 30px;">
                        N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu h·ªßy l·ªãch n√†y ho·∫∑c c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay l·∫≠p t·ª©c. Mong ƒë∆∞·ª£c g·∫∑p l·∫°i b·∫°n trong th·ªùi gian t·ªõi!
                    </p>
                </div>

                <div style="background-color: #2c3e50; color: #ecf0f1; padding: 30px 40px; text-align: center;">
                   <p style="font-size: 12px; color: #95a5a6; margin-top: 20px;">¬© %d %s. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        </body>
        </html>
        """,
                companyName,
                request.getCustomerName(),
                request.getAppointmentId(),
                request.getServiceName(),
                formatDate(request.getAppointmentDate()),
                request.getAppointmentTime(),
                request.getEndTime() != null ? request.getEndTime() : "Kh√¥ng x√°c ƒë·ªãnh",
                LocalDateTime.now().getYear(),
                companyName
        );
    }
    private String formatDate(String dateString) {
        if (dateString == null || dateString.isBlank()) {
            return "N/A";
        }
        try {
            // C·∫Øt chu·ªói t·∫°i 'T' n·∫øu c√≥ (ƒë·ªÉ x·ª≠ l√Ω ƒë·ªãnh d·∫°ng ISO "2024-12-31T17:00:00.000Z")
            String datePart = dateString.split("T")[0];
            LocalDate date = LocalDate.parse(datePart, DateTimeFormatter.ISO_LOCAL_DATE);
            return date.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        } catch (DateTimeParseException e) {
            log.warn("Could not parse date string: '{}'. Returning original value.", dateString, e);
            return dateString; // Tr·∫£ v·ªÅ gi√° tr·ªã g·ªëc n·∫øu kh√¥ng parse ƒë∆∞·ª£c
        }
    }

}